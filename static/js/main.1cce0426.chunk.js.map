{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","form","label","input","type","pattern","title","onChange","placeholder","btn","Component","ContactList","contacts","onDeleteContact","list","map","id","item","info","onClick","Filter","App","filter","addContact","entry","shortid","generate","some","contact","alert","prevState","changeFilter","deleteContact","contactId","getVisibleContacts","regExp","RegExp","test","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cce0426.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__19jb4\",\"input\":\"Filter_input__1zN1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3h7jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2DEOf\",\"label\":\"ContactForm_label__3rzgF\",\"input\":\"ContactForm_input__2QWGP\",\"btn\":\"ContactForm_btn__2iTXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2222-\",\"item\":\"ContactList_item__mRKqX\",\"btn\":\"ContactList_btn__J9gcS\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  \r\n    render() {\r\n      const { name, number } = this.state;\r\n      \r\n      return (\r\n        <form className={s.form} onSubmit = {this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              placeholder=\"First Name Last Name\"\r\n            />\r\n          </label>\r\n          \r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              placeholder=\"123456789\"\r\n            />\r\n            </label>\r\n            \r\n            <button className={s.btn} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n        </form>\r\n      )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <p className={s.info}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({name, number}) => {\r\n    const { contacts } = this.state;\r\n    const entry = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} already in the contacts.`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      contacts: [entry, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\r\n    }));\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const regExp = new RegExp(filter, 'gi');\r\n\r\n    if (filter) {\r\n      return contacts.filter(contact => regExp.test(contact.name));\r\n    }\r\n    return contacts;\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 ? (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        ) : (\r\n          <p>Your phonebook is empty. Please add contact.</p>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport s from './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App className={s} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}