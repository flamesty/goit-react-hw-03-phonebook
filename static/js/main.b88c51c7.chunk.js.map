{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","form","label","input","type","onChange","placeholder","btn","Component","ContactList","contacts","onDeleteContact","list","map","id","item","info","onClick","Filter","App","filter","addContact","entry","shortid","generate","some","contact","alert","prevState","changeFilter","deleteContact","contactId","getVisibleContacts","regExp","RegExp","test","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b88c51c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2errB\",\"input\":\"Filter_input__r_wV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Mf9j1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__f5Qoy\",\"label\":\"ContactForm_label__yvOK0\",\"input\":\"ContactForm_input__2wCKj\",\"btn\":\"ContactForm_btn__3O-nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Zr0D\",\"item\":\"ContactList_item__J4xKy\",\"btn\":\"ContactList_btn__2LVqB\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', number: '' });\n  };\n\n  \n    render() {\n      const { name, number } = this.state;\n      \n      return (\n        <form className={s.form} onSubmit = {this.handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              placeholder=\"First Name Last Name\"\n            />\n          </label>\n          \n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"number\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              placeholder=\"123456789\"\n            />\n            </label>\n            \n            <button className={s.btn} type=\"submit\">\n              Add contact\n            </button>\n        </form>\n      )\n    }\n}\n\nexport default ContactForm;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <p className={s.info}>\n            {name}: {number}\n          </p>\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n\n\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({name, number}) => {\n    const { contacts } = this.state;\n    const entry = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} already in the contacts.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      contacts: [entry, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const regExp = new RegExp(filter, 'gi');\n\n    if (filter) {\n      return contacts.filter(contact => regExp.test(contact.name));\n    }\n    return contacts;\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n        {contacts.length > 0 ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>Your phonebook is empty. Please add contact.</p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport s from './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className={s} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}